// /std_bhm/include/ed_1d/step_params.h

// -----------------------------------------------------------------------

// Insert summary of file

// -----------------------------------------------------------------------

#ifndef STD_BHM_ED_1D_STEP_PARAMS_H
#define STD_BHM_ED_1D_STEP_PARAMS_H

/* Include standard libraries */
#include <memory>

/* Non-standard third-party libraries */
#include "third_party/spimpl.h"

/* Include user-defined header files */



namespace std_bhm
{
namespace ed_1d
{
namespace step_params_detail
{

using int_vec = std::vector<int>;

class step_params
{
public:
    step_params(int N, int M);

    int get_hilbert_space_dimension() const;
    int get_total_number_of_particles() const;
    int get_number_of_lattice_sites() const;

    int_vec get_fock_state(int i) const;

private:
    class impl;
    spimpl::impl_ptr<impl> pimpl;
};

} // end of step_params_detail namespace



// lift relevant classes and functions up one namespace
using std_bhm::ed_1d::step_params_detail::step_params;



} // end of ed_1d namespace
} // end of std_bhm namespace


#endif
 
